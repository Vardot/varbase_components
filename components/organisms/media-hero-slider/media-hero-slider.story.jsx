import config from './mediaHeroSlider.config.yml';
import mediaHeroSlider from './mediaHeroSlider.twig';
import twigCode from '!!raw-loader!./mediaHeroSlider.twig';
import DrupalAttribute from 'drupal-attribute';
import { DocsPage, DocsContainer } from '@storybook/addon-docs/blocks';

export default {
  title : config.title,
  component: MediaHeroSlider,
  options: { showPanel: false },
  parameters: {
    docs: {
      container: DocsContainer,
      page: DocsPage,
      source: {code: twigCode},
      description: config.description
    },
  },
  argTypes: {
    accessibility: {
      control: { type: 'boolean' },
      description: config.accessibility.description,
      defaultValue: {summary: config.accessibility.default},
      table: config.accessibility.table,
    },
    adaptiveHeight: {
      control: { type: 'boolean' },
      description: config.adaptiveHeight.description,
      defaultValue: {summary: config.adaptiveHeight.default},
      table: config.adaptiveHeight.table,
    },
    appendArrows: {
      control: { type: 'text' },
      description: config.appendArrows.description,
      defaultValue: {summary: config.appendArrows.default},
      table: config.appendArrows.table,
    },
    appendDots: {
      control: { type: 'text' },
      description: config.appendDots.description,
      defaultValue: {summary: config.appendDots.default},
      table: config.appendDots.table,
    },
    arrows: {
      control: { type: 'boolean' },
      description: config.arrows.description,
      defaultValue: {summary: config.arrows.default},
      table: config.arrows.table,
    },
    asNavFor: {
      control: { type: 'text' },
      description: config.asNavFor.description,
      defaultValue: {summary: config.asNavFor.default},
      table: config.asNavFor.table,
    },
    autoplay: {
      control: { type: 'boolean' },
      description: config.autoplay.description,
      defaultValue: {summary: config.autoplay.default},
      table: config.autoplay.table,
    },
    autoplaySpeed: {
      control: { type: 'number' },
      description: config.autoplaySpeed.description,
      defaultValue: {summary: config.autoplaySpeed.default},
      table: config.autoplaySpeed.table,
    },
    centerMode: {
      control: { type: 'boolean' },
      description: config.centerMode.description,
      defaultValue: {summary: config.centerMode.default},
      table: config.centerMode.table,
    },
    centerPadding: {
      control: { type: 'text' },
      description: config.centerPadding.description,
      defaultValue: {summary: config.centerPadding.default},
      table: config.centerPadding.table,
    },
    cssEase: {
      control: { type: 'text' },
      description: config.cssEase.description,
      defaultValue: {summary: config.cssEase.default},
      table: config.cssEase.table,
    },
    customPaging: {
      control: { type: 'boolean' },
      description: config.customPaging.description,
      defaultValue: {summary: config.customPaging.default},
      table: config.customPaging.table,
    },
    dots: {
      control: { type: 'boolean' },
      description: config.dots.description,
      defaultValue: {summary: config.dots.default},
      table: config.dots.table,
    },
    dotsClass: {
      control: { type: 'text' },
      description: config.dotsClass.description,
      defaultValue: {summary: config.dotsClass.default},
      table: config.dotsClass.table,
    },
    draggable: {
      control: { type: 'boolean' },
      description: config.draggable.description,
      defaultValue: {summary: config.draggable.default},
      table: config.draggable.table,
    },
    easing: {
      control: { type: 'text' },
      description: config.easing.description,
      defaultValue: {summary: config.easing.default},
      table: config.easing.table,
    },
    edgeFriction: {
      control: { type: 'number' },
      description: config.edgeFriction.description,
      defaultValue: {summary: config.edgeFriction.default},
      table: config.edgeFriction.table,
    },
    fade: {
      control: { type: 'boolean' },
      description: config.fade.description,
      defaultValue: {summary: config.fade.default},
      table: config.fade.table,
    },
    focusOnSelect: {
      control: { type: 'boolean' },
      description: config.focusOnSelect.description,
      defaultValue: {summary: config.focusOnSelect.default},
      table: config.focusOnSelect.table,
    },
    focusOnChange: {
      control: { type: 'boolean' },
      description: config.focusOnChange.description,
      defaultValue: {summary: config.focusOnChange.default},
      table: config.focusOnChange.table,
    },
    infinite: {
      control: { type: 'number' },
      description: config.infinite.description,
      defaultValue: {summary: config.infinite.default},
      table: config.infinite.table,
    },
    initialSlide: {
      control: { type: 'boolean' },
      description: config.initialSlide.description,
      defaultValue: {summary: config.initialSlide.default},
      table: config.initialSlide.table,
    },
    lazyLoad: {
      control: { type: 'text' },
      description: config.lazyLoad.description,
      defaultValue: {summary: config.lazyLoad.default},
      table: config.lazyLoad.table,
    },
    mobileFirst: {
      control: { type: 'boolean' },
      description: config.mobileFirst.description,
      defaultValue: {summary: config.mobileFirst.default},
      table: config.mobileFirst.table,
    },
    nextArrow: {
      control: { type: 'text' },
      description: config.nextArrow.description,
      defaultValue: {summary: config.nextArrow.default},
      table: config.nextArrow.table,
    },
    pauseOnDotsHover: {
      control: { type: 'boolean' },
      description: config.pauseOnDotsHover.description,
      defaultValue: {summary: config.pauseOnDotsHover.default},
      table: config.pauseOnDotsHover.table,
    },
    pauseOnFocus: {
      control: { type: 'boolean' },
      description: config.pauseOnFocus.description,
      defaultValue: {summary: config.pauseOnFocus.default},
      table: config.pauseOnFocus.table,
    },
    pauseOnHover: {
      control: { type: 'boolean' },
      description: config.pauseOnHover.description,
      defaultValue: {summary: config.pauseOnHover.default},
      table: config.pauseOnHover.table,
    },
    prevArrow: {
      control: { type: 'text' },
      description: config.prevArrow.description,
      defaultValue: {summary: config.prevArrow.default},
      table: config.prevArrow.table,
    },
    respondTo: {
      control: { type: 'text' },
      description: config.respondTo.description,
      defaultValue: {summary: config.respondTo.default},
      table: config.respondTo.table,
    },
    responsive: {
      control: { type: 'boolean' },
      description: config.responsive.description,
      defaultValue: {summary: config.responsive.default},
      table: config.responsive.table,
    },
    rows: {
      control: { type: 'number' },
      description: config.rows.description,
      defaultValue: {summary: config.rows.default},
      table: config.rows.table,
    },
    rtl: {
      control: { type: 'boolean' },
      description: config.rtl.description,
      defaultValue: {summary: config.rtl.default},
      table: config.rtl.table,
    },
    slide: {
      control: { type: 'text' },
      description: config.slide.description,
      defaultValue: {summary: config.slide.default},
      table: config.slide.table,
    },
    slidesPerRow: {
      control: { type: 'number' },
      description: config.slidesPerRow.description,
      defaultValue: {summary: config.slidesPerRow.default},
      table: config.slidesPerRow.table,
    },
    slidesToScroll: {
      control: { type: 'number' },
      description: config.slidesToScroll.description,
      defaultValue: {summary: config.slidesToScroll.default},
      table: config.slidesToScroll.table,
    },
    slidesToShow: {
      control: { type: 'number' },
      description: config.slidesToShow.description,
      defaultValue: {summary: config.slidesToShow.default},
      table: config.slidesToShow.table,
    },
    speed: {
      control: { type: 'number' },
      description: config.speed.description,
      defaultValue: {summary: config.speed.default},
      table: config.speed.table,
    },
    swipe: {
      control: { type: 'boolean' },
      description: config.swipe.description,
      defaultValue: {summary: config.swipe.default},
      table: config.swipe.table,
    },
    swipeToSlide: {
      control: { type: 'boolean' },
      description: config.swipeToSlide.description,
      defaultValue: {summary: config.swipeToSlide.default},
      table: config.swipeToSlide.table,
    },
    touchMove: {
      control: { type: 'boolean' },
      description: config.touchMove.description,
      defaultValue: {summary: config.touchMove.default},
      table: config.touchMove.table,
    },
    touchThreshold: {
      control: { type: 'number' },
      description: config.touchThreshold.description,
      defaultValue: {summary: config.touchThreshold.default},
      table: config.touchThreshold.table,
    },
    useCSS: {
      control: { type: 'boolean' },
      description: config.useCSS.description,
      defaultValue: {summary: config.useCSS.default},
      table: config.useCSS.table,
    },
    useTransform: {
      control: { type: 'boolean' },
      description: config.useTransform.description,
      defaultValue: {summary: config.useTransform.default},
      table: config.useTransform.table,
    },
    variableWidth: {
      control: { type: 'boolean' },
      description: config.variableWidth.description,
      defaultValue: {summary: config.variableWidth.default},
      table: config.variableWidth.table,
    },
    vertical: {
      control: { type: 'boolean' },
      description: config.vertical.description,
      defaultValue: {summary: config.vertical.default},
      table: config.vertical.table,
    },
    verticalSwiping: {
      control: { type: 'boolean' },
      description: config.verticalSwiping.description,
      defaultValue: {summary: config.verticalSwiping.default},
      table: config.verticalSwiping.table,
    },
    waitForAnimate: {
      control: { type: 'boolean' },
      description: config.waitForAnimate.description,
      defaultValue: {summary: config.waitForAnimate.default},
      table: config.waitForAnimate.table,
    },
    zIndex: {
      control: { type: 'number' },
      description: config.zIndex.description,
      defaultValue: {summary: config.zIndex.default},
      table: config.zIndex.table,
    }
  },
};




export const MediaHeroSlider = (args) => {
  return (
    mediaHeroSlider({
      attributes: new DrupalAttribute(),
      utility_classes: [],
      accessibility: args.accessibility ? args.accessibility : config.accessibility.default,
      adaptiveHeight: args.adaptiveHeight ? args.adaptiveHeight : config.adaptiveHeight.default,
      appendArrows: args.appendArrows ? args.appendArrows : config.appendArrows.default,
      appendDots: args.appendDots ? args.appendDots : config.appendDots.default,
      arrows: args.arrows ? args.arrows : config.arrows.default,
      asNavFor: args.asNavFor ? args.asNavFor : config.asNavFor.default,
      autoplay: args.autoplay ? args.autoplay : config.autoplay.default,
      autoplaySpeed: args.autoplaySpeed ? args.autoplaySpeed : config.autoplaySpeed.default,
      centerMode: args.centerMode ? args.centerMode : config.centerMode.default,
      centerPadding: args.centerPadding ? args.centerPadding : config.centerPadding.default,
      cssEase: args.cssEase ? args.cssEase : config.cssEase.default,
      customPaging: args.customPaging ? args.customPaging : config.customPaging.default,
      dots: args.dots ? args.dots : config.dots.default,
      dotsClass: args.dotsClass ? args.dotsClass : config.dotsClass.default,
      draggable: args.draggable ? args.draggable : config.draggable.default,
      easing: args.easing ? args.easing : config.easing.default,
      edgeFriction: args.edgeFriction ? args.edgeFriction : config.edgeFriction.default,
      fade: args.fade ? args.fade : config.fade.default,
      focusOnSelect: args.focusOnSelect ? args.focusOnSelect : config.focusOnSelect.default,
      focusOnChange: args.focusOnChange ? args.focusOnChange : config.focusOnChange.default,
      infinite: args.infinite ? args.infinite : config.infinite.default,
      initialSlide: args.initialSlide ? args.initialSlide : config.initialSlide.default,
      lazyLoad: args.lazyLoad ? args.lazyLoad : config.lazyLoad.default,
      mobileFirst: args.mobileFirst ? args.mobileFirst : config.mobileFirst.default,
      nextArrow: args.nextArrow ? args.nextArrow : config.nextArrow.default,
      pauseOnDotsHover: args.pauseOnDotsHover ? args.pauseOnDotsHover : config.pauseOnDotsHover.default,
      pauseOnFocus: args.pauseOnFocus ? args.pauseOnFocus : config.pauseOnFocus.default,
      pauseOnHover: args.pauseOnHover ? args.pauseOnHover : config.pauseOnHover.default,
      prevArrow: args.prevArrow ? args.prevArrow : config.prevArrow.default,
      respondTo: args.respondTo ? args.respondTo : config.respondTo.default,
      responsive: args.responsive ? args.responsive : config.responsive.default,
      rows: args.rows ? args.rows : config.rows.default,
      rtl: args.rtl ? args.rtl : config.rtl.default,
      slide: args.slide ? args.slide : config.slide.default,
      slidesPerRow: args.slidesPerRow ? args.slidesPerRow : config.slidesPerRow.default,
      slidesToScroll: args.slidesToScroll ? args.slidesToScroll : config.slidesToScroll.default,
      slidesToShow: args.slidesToShow ? args.slidesToShow : config.slidesToShow.default,
      speed: args.speed ? args.speed : config.speed.default,
      swipe: args.swipe ? args.swipe : config.swipe.default,
      swipeToSlide: args.swipeToSlide ? args.swipeToSlide : config.swipeToSlide.default,
      touchMove: args.touchMove ? args.touchMove : config.touchMove.default,
      touchThreshold: args.touchThreshold ? args.touchThreshold : config.touchThreshold.default,
      useCSS: args.useCSS ? args.useCSS : config.useCSS.default,
      useTransform: args.useTransform ? args.useTransform : config.useTransform.default,
      variableWidth: args.variableWidth ? args.variableWidth : config.variableWidth.default,
      vertical: args.vertical ? args.vertical : config.vertical.default,
      verticalSwiping: args.verticalSwiping ? args.verticalSwiping : config.verticalSwiping.default,
      waitForAnimate: args.waitForAnimate ? args.waitForAnimate : config.waitForAnimate.default,
      zIndex: args.zIndex ? args.zIndex : config.zIndex.default,
      id: config.data.id,
      items: config.data.items,
    })
  )
}

MediaHeroSlider.args = {
  accessibility: config.accessibility.default,
  adaptiveHeight: config.adaptiveHeight.default,
  appendArrows: config.appendArrows.default,
  appendDots: config.appendDots.default,
  arrows: config.arrows.default,
  asNavFor: config.asNavFor.default,
  autoplay: config.autoplay.default,
  autoplaySpeed: config.autoplaySpeed.default,
  centerMode: config.centerMode.default,
  centerPadding: config.centerPadding.default,
  cssEase: config.cssEase.default,
  customPaging: config.customPaging.default,
  dots: config.dots.default,
  dotsClass: config.dotsClass.default,
  draggable: config.draggable.default,
  easing: config.easing.default,
  edgeFriction: config.edgeFriction.default,
  fade: config.fade.default,
  focusOnSelect: config.focusOnSelect.default,
  focusOnChange: config.focusOnChange.default,
  infinite: config.infinite.default,
  initialSlide: config.initialSlide.default,
  lazyLoad: config.lazyLoad.default,
  mobileFirst: config.mobileFirst.default,
  nextArrow: config.nextArrow.default,
  pauseOnDotsHover: config.pauseOnDotsHover.default,
  pauseOnFocus: config.pauseOnFocus.default,
  pauseOnHover: config.pauseOnHover.default,
  prevArrow: config.prevArrow.default,
  respondTo: config.respondTo.default,
  responsive: config.responsive.default,
  rows: config.rows.default,
  rtl: config.rtl.default,
  slide: config.slide.default,
  slidesPerRow: config.slidesPerRow.default,
  slidesToScroll: config.slidesToScroll.default,
  slidesToShow: config.slidesToShow.default,
  speed: config.speed.default,
  swipe: config.swipe.default,
  swipeToSlide: config.swipeToSlide.default,
  touchMove: config.touchMove.default,
  touchThreshold: config.touchThreshold.default,
  useCSS: config.useCSS.default,
  useTransform: config.useTransform.default,
  variableWidth: config.variableWidth.default,
  vertical: config.vertical.default,
  verticalSwiping: config.verticalSwiping.default,
  waitForAnimate: config.waitForAnimate.default,
  zIndex: config.zIndex.default
};
