{#
/**
 * @file
 * Varbase Components implementation for Bootstrap heroslider component.
 *
 * Available properties:
 * - id: Set a unique id on the heroslider for optional controls, especially if the single page is using multiple hero sliders.
 * - items: An array of slider items, with a formatted UI Pattern for Cards.
 * - controls: Add the previous/next controls.
 * - indicators: Add indicators to the heroslider, alongside the previous/next controls.
 * - utility_classes: An array of utility classes. Use to add extra Bootstrap utility classes or custom CSS classes over to the heroslider element.
 * - indicators_utility_classes: An array of utility classes. Use to add extra Bootstrap utility classes or custom CSS classes over to the indicators element.
 *
 * Available attributes:
 * - attributes: HTML attributes to apply to the heroslider main wrapper tag.
 * - indicators_attributes: HTML attributes to apply to the indicators wrapper tag.
 *
 * Available slots:
 * - empty: The output when the Hero Slider has no slides (empty).
 *
 */
#}
{% set heroslider_id = id ? id : 'heroslider-' ~ random(1000) %}
{% set utility_classes = utility_classes ?? [] %}
{% set indicators_utility_classes = indicators_utility_classes ?? [] %}

{%
  set heroslider_classes = [
    'varbase-heroslider',
    'carousel',
    'slide',
  ]|merge(utility_classes)
%}

{% if not attributes %}
  {% set attributes = create_attribute() %}
{% endif %}

{% set attributes = attributes.addClass(heroslider_classes) %}
{% set attributes = attributes.setAttribute('id', heroslider_id) %}
{% set attributes = attributes.setAttribute('data-bs-ride', 'carousel') %}

{% if items and items|length >= 1 -%}
  <div{{ attributes }}>
    {# Add carousel itmes #}
    <div class="carousel-inner">
      {% for key, item in items %}
        {% set item_id = heroslider_id ~ '--item-' ~ key %}
        <div id="{{ item_id }}" class="carousel-item {{ (key == 0) ? 'active' }}">
          {{ item }}
        </div>
      {% endfor %}
    </div>

    {% if (indicators or controls) and items|length >= 2 %}
    <div class="carousel-controls">

      {# Add indicators for the carousel #}
      {% if indicators %}
        {% if not indicators_attributes %}
          {% set indicators_attributes = create_attribute() %}
        {% endif %}

        {%
          set indicators_classes = [
            'carousel-indicators'
          ]|merge(indicators_utility_classes)
        %}

        {% set indicators_attributes = indicators_attributes.addClass(indicators_classes) %}

        <div{{ indicators_attributes}}>
          {% for key, item in items %}
            {% set item_id = heroslider_id ~ '--item-' ~ key %}
            <button id="indicator--{{ item_id }}" type="button" data-bs-target="#{{ heroslider_id }}" data-bs-slide-to="{{ key }}" class="{{ (key == 0) ? 'active' }}" aria-label="{{ item.indicator_label }}" aria-current="{{ (key == 0) ? 'true' }}"></button>
          {% endfor %}
        </div>
      {% endif %}

      {# Add controls for the carousel #}
      {% if controls %}
        <div class="carousel-control-buttons">
          <button class="carousel-control-prev" type="button" data-bs-target="#{{ heroslider_id }}" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">{{ 'Previous'|t }}</span>
          </button>
          <button class="carousel-control-pause" type="button" data-bs-target="#{{ heroslider_id }}" data-bs-slide="pause">
            <span class="carousel-control-pause-icon" aria-hidden="true"></span>
            <span class="visually-hidden">{{ 'Pause'|t }}</span>
          </button>
          <button class="carousel-control-next" type="button" data-bs-target="#{{ heroslider_id }}" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">{{ 'Next'|t }}</span>
          </button>
        </div>
      {% endif %}
    </div>
    {% endif %}
  </div>
{% elseif empty -%}
  <div{{ attributes }}>
    <div class="view-empty">
      {{ empty }}
    </div>
  </div>
{% endif %}