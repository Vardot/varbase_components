@import "../../defaults";   // Global component defaults.

.varbase-hero-card {

  .hero-card-content {
    position: absolute;
    width: 100%;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1.88rem;
    z-index: 3;
    color: $hero-brief-text-color;
    background-image: linear-gradient(180deg, $hero-card-content-background-color1, $hero-card-content-background-color2);

    > * {
      max-width: 53rem;
    }

    @media screen and (min-width: map-get($grid-breakpoints, "sm")) {
      padding: 1.88rem calc((100vw - map-get($container-max-widths, "sm"))/2) 3.88rem;
    }

    @media screen and (min-width: map-get($grid-breakpoints, "md")) {
      padding: 1.88rem calc(((100vw - map-get($container-max-widths, "md"))/2) + $grid-gutter-width/2) 3.88rem;
    }

    @media screen and (min-width: map-get($grid-breakpoints, "lg")) {
      padding: 1.88rem calc(((100vw - map-get($container-max-widths, "lg"))/2) + $grid-gutter-width/2) 9.375rem;
    }

    @media screen and (min-width: map-get($grid-breakpoints, "xl")) {
      padding: 1.88rem calc(((100vw - map-get($container-max-widths, "xl"))/2) + $grid-gutter-width/2) 9.375rem;
    }

    @media screen and (min-width: map-get($grid-breakpoints, "xxl")) {
      padding: 1.88rem calc(((100vw - map-get($container-max-widths, "xxl"))/2) + $grid-gutter-width/2) 9.375rem;
    }

    .card-title {
      color: $hero-card-title-color;
      @include font-size($hero-card-xlarge-title-font-size);

      a {
        color: $hero-card-title-color;
        text-transform: none;

      }

    }

    .btn.btn-lg {
      font-weight: 700 !important;
    }

  }
}
